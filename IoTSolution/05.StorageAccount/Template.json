{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccount": {
      "type": "object"
    },
    "roleAssignments": {
      "type": "array"
    },
    "blobContainers": {
      "type": "array"
    },
    "messageQueues": {
      "type": "array"
    },
    "fileShares": {
      "type": "array"
    },
    "virtualNetwork": {
      "type": "object"
    }
  },
  "variables": {
    "roleAssignmentApiVersion": "2021-04-01-preview",
    "storageApiVersion": "2021-04-01",
    "networkApiVersion": "2021-02-01",
    "dnsZoneApiVersion": "2020-06-01",
    "dnsZoneName": "privatelink.blob.core.windows.net"
  },
  "functions": [
    {
      "namespace": "fx",
      "members": {
        "GetResourceName": {
          "parameters": [
            {
              "name": "resources",
              "type": "array"
            },
            {
              "name": "copyIndex",
              "type": "int"
            }
          ],
          "output": {
            "type": "string",
            "value": "[if(equals(length(parameters('resources')), 0), 'account/default/resource', concat(parameters('resources')[parameters('copyIndex')].accountName, '/default/', parameters('resources')[parameters('copyIndex')].name))]"
          }
        }
      }
    }
  ],
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('storageAccount').name]",
      "apiVersion": "[variables('storageApiVersion')]",
      "location": "[resourceGroup().location]",
      "kind": "[parameters('storageAccount').type]",
      "sku": {
        "name": "[parameters('storageAccount').replication]"
      },
      "properties": {
        "supportsHttpsTrafficOnly": "[parameters('storageAccount').enableHttpsTrafficOnly]",
        "allowBlobPublicAccess": "[parameters('storageAccount').enableBlobPublicAccess]",
        "allowSharedKeyAccess": "[parameters('storageAccount').enableAccountKeyAccess]",
        "isHnsEnabled": "[parameters('storageAccount').enableHierarchialNamespace]",
        "networkAcls": {
          "defaultAction": "Deny",
          "bypass": "AzureServices"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
      "name": "[concat(parameters('storageAccount').name, '/Microsoft.Authorization/', guid(parameters('storageAccount').name, parameters('roleAssignments')[copyIndex()].roleName))]",
      "apiVersion": "[variables('roleAssignmentApiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn":[
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount').name)]"
      ],
      "properties": {
        "roleDefinitionId": "[concat(resourceGroup().id, '/providers/Microsoft.Authorization/roleDefinitions/', parameters('roleAssignments')[copyIndex()].roleId)]",
        "principalId": "[parameters('roleAssignments')[copyIndex()].principalId]",
        "principalType": "[parameters('roleAssignments')[copyIndex()].principalType]"
      },
      "copy": {
        "name": "roleAssignments",
        "count": "[length(parameters('roleAssignments'))]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "name": "[fx.GetResourceName(parameters('blobContainers'), copyIndex())]",
      "apiVersion": "[variables('storageApiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount').name)]"
      ],
      "properties": {
        "publicAccess": "[parameters('blobContainers')[copyIndex()].publicAccess]"
      },
      "copy": {
        "name": "blobContainers",
        "count": "[length(parameters('blobContainers'))]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
      "name": "[fx.GetResourceName(parameters('messageQueues'), copyIndex())]",
      "apiVersion": "[variables('storageApiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount').name)]"
      ],
      "properties": {
      },
      "copy": {
        "name": "messageQueues",
        "count": "[length(parameters('messageQueues'))]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "name": "[fx.GetResourceName(parameters('fileShares'), copyIndex())]",
      "apiVersion": "[variables('storageApiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount').name)]"
      ],
      "properties": {
        "enabledProtocols": "[parameters('fileShares')[copyIndex()].protocols]",
        "shareQuota": "[parameters('fileShares')[copyIndex()].size]"
      },
      "copy": {
        "name": "fileShares",
        "count": "[length(parameters('fileShares'))]"
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "name": "[variables('dnsZoneName')]",
      "apiVersion": "[variables('dnsZoneApiVersion')]",
      "location": "global",
      "properties": {
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "name": "[concat(variables('dnsZoneName'), '/', parameters('virtualNetwork').name)]",
      "apiVersion": "[variables('dnsZoneApiVersion')]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', variables('dnsZoneName'))]"
      ],
      "properties": {
        "virtualNetwork": {
          "id": "[resourceId(parameters('virtualNetwork').resourceGroupName, 'Microsoft.Network/virtualNetworks', parameters('virtualNetwork').name)]"
        },
        "registrationEnabled": "[parameters('virtualNetwork').enableDnsAutoRegistration]"
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "name": "[parameters('storageAccount').name]",
      "apiVersion": "[variables('networkApiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount').name)]"
      ],
      "properties": {
        "subnet": {
          "id": "[resourceId(parameters('virtualNetwork').resourceGroupName, 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork').name, parameters('virtualNetwork').subnetName)]"
        },
        "privateLinkServiceConnections": [
          {
            "name": "storage",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount').name)]",
              "groupIds": [
                "blob"
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
      "name": "[concat(parameters('storageAccount').name, '/default')]",
      "apiVersion": "[variables('networkApiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateEndpoints', parameters('storageAccount').name)]",
        "[resourceId('Microsoft.Network/privateDnsZones', variables('dnsZoneName'))]"
      ],
      "properties": {
        "privateDnsZoneConfigs": [
          {
            "name": "[replace(variables('dnsZoneName'), '.', '-')]",
            "properties": {
              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('dnsZoneName'))]"
            }
          }
        ]
      }
    }
  ],
  "outputs": {
    "storageAccount": {
      "type": "object",
      "value": {
        "name": "[parameters('storageAccount').name]",
        "resourceGroupName": "[resourceGroup().name]"
      }
    }
  }
}
